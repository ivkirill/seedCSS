// Contextual colors

.bg-variant(@color) {
  background-color: @color;
  a&:hover {
    background-color: darken(@color, 10%);
  }
}


.text-variant(@color) {
  color: @color;
  a&:hover {
    color: darken(@color, 10%);
  }
}


// Panels
.panel-variant(@border; @heading-text-color; @heading-bg-color; @heading-border) {
  border-color: @border;

  & > .panel-heading {
    color: @heading-text-color;
    background-color: @heading-bg-color;
    border-color: @heading-border;

    a:active,
    a:focus,
    a:hover {
      color: darken(@heading-text-color, 10%);
    }

    + .panel-collapse > .panel-body {
      border-top-color: @border;
    }
    .badge {
      color: @heading-bg-color;
      background-color: @heading-text-color;
    }
  }
  & > .panel-footer {
    + .panel-collapse > .panel-body {
      border-bottom-color: @border;
    }
  }
}



// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

.button-color(@background; @color; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;

  &:hover,
  &:focus,
  &.focus {
    z-index:2;
    color: @color;
    background-color: darken(@background, 5%);
        border-color: darken(@border, 6%);
  }

  &:active,
  &.active {
    z-index:2;
    color: @color;
    background-color: darken(@background, 7%);
        border-color: darken(@border, 8%);
  }

  &:active,
  &.active,
  .open > .dropdown-toggle& {
    background-image: none;
  }

  &.btn-outline {
     background-color: transparent;
     border-color: @border;
     color: @border;

    &:hover,
    &:focus,
    &.focus {
      color: lighten(@border, 8%);
      background-color: transparent;
      border-color: lighten(@border, 5%);
    }


    &:active,
    &.active {
      color: darken(@border, 4%);
      background-color: transparent;
      border-color: darken(@border, 10%);
      box-shadow: none;
    }
  } 

  &.btn-link {
    color: @border;

    &:hover,
    &:focus,
    &.focus {
      color: lighten(@border, 8%);
      border-color: transparent;
    }

    &:active,
    &.active {
      color: darken(@border, 10%);
      border-color: transparent;
    }
  }


  &[data-effect]:hover,
  &[data-effect]:focus,
  &[data-effect].focus,
  .open > .dropdown-toggle[data-effect]& {
      color: @color;
      background-color: @background;
        border-color: darken(@border, 12%);

    &:after,
    &:before {
      background-color: darken(@background, 10%);
    }

    &:active:after,
    &:active:before {
      background-color: darken(@background, 15%);
    }
  }

  &[data-effect]:active,
  &[data-effect].active {
      color: @color;
      background-color: @background;
        border-color: lighten(@border, 6%);

    &:after,
    &:before {
      background-color: darken(@background, 15%);
    }
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: @background;
          border-color: @border;
    }
  }

  .badge {
    color: @background;
    background-color: @color;
  }

}

// Button sizes
.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @input-height; @border-radius; @border-width) {
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  line-height: @line-height;
  height: @input-height;
  border-radius: @border-radius;
  border-width: @border-width;
}

// Tables
.table-row-variant(@state; @background) {
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.
  .table > thead > tr,
  .table > tbody > tr,
  .table > tfoot > tr {
    > td.@{state},
    > th.@{state},
    &.@{state} > td,
    &.@{state} > th,

    > td.bg-@{state},
    > th.bg-@{state},
    &.bg-@{state} > td,
    &.bg-@{state} > th {
      background-color: @background;
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover > tbody > tr {
    > td.@{state}:hover,
    > th.@{state}:hover,
    &.@{state}:hover > td,
    &:hover > .@{state},
    &.@{state}:hover > th,

    > td.bg-@{state}:hover,
    > th.bg-@{state}:hover,
    &.bg-@{state}:hover > td,
    &:hover > .bg-@{state},
    &.bg-@{state}:hover > th {
      background-color: darken(@background, 5%);
    }
  }
}


// Groups
.item-group-variant(@state; @background; @color) {
  .item-group-@{state} {
    color: @color;
    background-color: @background;

    a& {
      color: @color;

      .item-group-heading {
        color: inherit;
      }

      &:hover,
      &:focus {
        color: @color;
        background-color: darken(@background, 5%);
      }
      &.active,
      &.active:hover,
      &.active:focus {
        color: #fff;
        background-color: spin(darken(@background, 25%), -5%);
        border-color: spin(darken(@background, 25%), -5%);
      }
    }
  }
}

.pagination-size(@padding-vertical; @padding-horizontal; @font-size; @border-radius) {
  > li {
    > a,
    > span {
      padding: @padding-vertical @padding-horizontal;
      font-size: @font-size;
    }
    &:first-child {
      > a,
      > span {
        .border-left-radius(@border-radius);
      }
    }
    &:last-child {
      > a,
      > span {
        .border-right-radius(@border-radius);
      }
    }
  }
}
